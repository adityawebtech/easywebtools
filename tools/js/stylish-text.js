// stylish-text.js

const stylishInput = document.getElementById("stylishInput"); const stylishOutput = document.getElementById("stylishOutput");

const styles = [ text => text, // Plain text => [...text].map(c => c + "̶").join(""), // Strikethrough text => [...text].map(c => c + "̲").join(""), // Underline text => [...text].map(c => c + "̅").join(""), // Overline text => [...text].map(c => c + "́").join(""), // Accent text => text.split("").reverse().join(""), // Reversed text => [...text].map(c => c.toUpperCase()).join(" "), // Spaced Caps text => text.toUpperCase(), // All Caps text => text.toLowerCase(), // All Lower text => *${text}*, text => ~${text}~, text => _${text}_, text => **${text}**, text => [...text].map(c => "𝐀".charCodeAt(0) + (c.charCodeAt(0) - 97)).map(c => String.fromCharCode(c)).join(""), // Bold serif lowercase (a-z) text => [...text].map(c => "ᵀ0".charCodeAt(0) + (c.charCodeAt(0) - 65)).map(c => String.fromCharCode(c)).join(""), // Bold serif uppercase (A-Z) text => [...text].map(c => String.fromCodePoint(c.codePointAt(0) + 0x1D400 - 0x41)).join(""), // Unicode math bold (A-Z) text => [...text].map(c => String.fromCodePoint(c.codePointAt(0) + 0x1D41A - 0x61)).join(""), // Unicode math italic (a-z) text => [...text].map(c => (${c})).join(""), // Circled text => [...text].map(c => 🅰.charAt(0) === c ? 🅰 : c).join(""), // A enclosed text => text.split('').map(c => String.fromCharCode(0x1D670 + c.charCodeAt(0) - 65)).join(''), // Sans-serif caps text => text.split('').map(c => 𝔊𝔞𝔢.includes(c.toUpperCase()) ? 𝓐 : c).join(''), // Fancy fallback text => [...text].map(c => 𝒜.charCodeAt(0) + (c.toLowerCase().charCodeAt(0) - 97)).map(c => String.fromCharCode(c)).join(""), // Script text => text.split('').map(c => c + '̱').join(''), // Double underline text => [...text].map(c => c + "̀").join(""), // Grave accent text => [...text].map(c => c + "̃").join(""), // Tilde accent text => [...text].map(c => \u{1D5A0}.charAt(0) === c ? \u{1D5A0} : c).join(""), text => text.split('').map(c => 𝘺.charCodeAt(0) + (c.toLowerCase().charCodeAt(0) - 97)).map(c => String.fromCharCode(c)).join(''), text => text.split('').map(c => 𝔸.charCodeAt(0) + (c.toLowerCase().charCodeAt(0) - 97)).map(c => String.fromCharCode(c)).join(''), text => text.split('').map(c => c + '̴').join(''), text => text.split('').map(c => c + '̤').join(''), text => text.split('').map(c => c + '⃤').join(''), text => text.split('').map(c => c + '̋').join(''), text => text.split('').map(c => c + '̈').join(''), text => text.split('').map(c => c + '͜').join(''), text => [...text].map(c => 𝒶.charCodeAt(0) + (c.toLowerCase().charCodeAt(0) - 97)).map(c => String.fromCharCode(c)).join(''), text => [...text].map(c => 𝔊.charCodeAt(0) + (c.toUpperCase().charCodeAt(0) - 65)).map(c => String.fromCharCode(c)).join(''), text => [...text].map(c => c + "͙").join(""), // Dot below text => [...text].map(c => c + "͡").join(""), // Inverted breve text => [...text].map(c => c + "̂").join(""), // Circumflex text => [...text].map(c => c + "͟").join(""), // Double low line text => [...text].map(c => 【${c}】).join(""), text => [...text].map(c => 『${c}』).join(""), text => [...text].map(c => 《${c}》).join(""), text => [...text].map(c => 〘${c}〙).join(""), text => [...text].map(c => ✪${c}✪).join(""), text => [...text].map(c => *${c}*).join(""), text => [...text].map(c => ¤${c}¤).join(""), text => [...text].map(c => ⟦${c}⟧).join(""), text => [...text].map(c => ⧼${c}⧽).join(""), text => [...text].map(c => ⧙${c}⧘).join(""), text => [...text].map(c => ◉${c}◉).join(""), text => [...text].map(c => ⫷${c}⫸).join(""), text => [...text].map(c => ⟨${c}⟩).join(""), ];

function updateStylishOutput() { const inputText = stylishInput.value; stylishOutput.innerHTML = "";

styles.forEach(style => { const styledText = style(inputText); const div = document.createElement("div"); div.className = "bg-gray-100 p-3 rounded-lg border text-sm flex justify-between items-center"; div.innerHTML = <span class="font-mono truncate">${styledText}</span> <button class="text-blue-600 hover:underline ml-4" onclick="copyToClipboard('${styledText.replace(/'/g, "\\'")}')">Copy</button>; stylishOutput.appendChild(div); }); }

function copyToClipboard(text) { navigator.clipboard.writeText(text).then(() => { alert("Copied to clipboard!"); }); }

stylishInput.addEventListener("input", updateStylishOutput);
